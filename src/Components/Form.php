<?php

namespace Mepatek\Components;

use Mepatek\Components\Controls\DateTimeFormControl;
use Mepatek\Components\Controls\DateFormControl;

/**
 * Class Form
 * @package Mepatek\Components
 */
class Form extends \Nette\Application\UI\Form
{
	/** @var boolean * */
	protected $readonly = false;
	/** @var boolean * */
	protected $tooltips = false;

	/**
	 * FormBootstrap constructor.
	 *
	 * @param null|string      $type null, inline, vertical
	 */
	public function __construct($type = null)
	{
		parent::__construct();
	}

	/**
	 * Render form
	 * @param array ...$args
	 */
	public function render(...$args)
	{
		if ($this->readonly) {
			foreach ($this->getControls() as $control) {
				$control->controlPrototype->readonly = 'readonly';
			}
		}
		if ($this->tooltips) {
			foreach ($this->getControls() as $control) {
				$control->controlPrototype->{"data-toggle"}('tooltip');
				$control->controlPrototype->{"data-placement"}('right');
			}
		}

		parent::render(...$args); // TODO: Change the autogenerated stub
	}

	/**
	 * Add input type=DATE
	 *
	 * @param string $name
	 * @param string $label
	 *
	 * @return \Nette\Forms\Controls\BaseControl
	 */
	public function addDate($name, $label = null)
	{
		$control = new DateFormControl($label);
		$this->addComponent($control, $name);
		return $control;
	}

	/**
	 * Add input type=DATETIME
	 *
	 * @param string $name
	 * @param string $label
	 *
	 * @return \Nette\Forms\Controls\BaseControl
	 */
	public function addDateTime($name, $label = null)
	{
		$control = new DateTimeFormControl($label);
		$this->addComponent($control, $name);
		return $control;
	}

	/**
	 * get readonly property
	 * @return boolean
	 */
	public function getReadonly()
	{
		return $this->readonly;
	}

	/**
	 * Set readonly for all controls
	 *
	 * @param boolean $readonly
	 *
	 * @return Form
	 */
	public function setReadonly($readonly = true)
	{
		$this->readonly = $readonly;
		return $this;
	}

	/**
	 * Set tooltip for all controls
	 *
	 * @param boolean $tooltips
	 *
	 * @return Form
	 */
	public function setTooltip($tooltips = true)
	{
		$this->tooltips = $tooltips;
		return $this;
	}

	/**
	 * get tooltip property
	 * @return boolean
	 */
	public function getTooltip()
	{
		return $this->tooltips;
	}
}
